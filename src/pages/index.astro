---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';

const explainer = `
An Astro website can go way beyond static pages - on the right platform.

Netlify supports not only [Streaming SSR](https://docs.astro.build/en/guides/server-side-rendering/#html-streaming) and fast [Edge Middleware](https://docs.astro.build/en/guides/middleware/), but also [on-demand revalidation](https://www.netlify.com/blog/cache-tags-and-purge-api-on-netlify/) and [stale-while-revalidate](https://www.netlify.com/blog/swr-and-fine-grained-cache-control/). 
Any page or data can be rebuilt only when needed, without site visitors ever getting a performance hit.
`;
---

<style>
    body { font-family: sans-serif; padding: 20px; background: #f4f4f4; }
    h1 { color: #333; }
    pre { background: #fff; padding: 16px; border-radius: 8px; overflow-x: auto; box-shadow: 0 0 8px rgba(0,0,0,0.1); }
    .token { margin-top: 10px; padding: 10px; background: #d4edda; border: 1px solid #c3e6cb; border-radius: 6px; }
  </style>
</head>
<body>

  <h1>ðŸ“± Device Info Capture</h1>
  <p>This page captures device/browser data and stores a token in your clipboard.</p>

  <div id="clipboard-status" class="token"></div>
  <h2>Captured Data:</h2>
  <pre id="output">Loading...</pre>

  <script>
  async function collectDeviceData() {
    const token = 'token_' + Math.random().toString(36).substring(2, 10);

    const webData = {
      trackingId: token,
      screen: {
        width: window.screen.width,
        height: window.screen.height,
        pixelRatio: window.devicePixelRatio,
        colorDepth: window.screen.colorDepth
      },
      device: {
        platform: navigator.platform,
        language: navigator.language,
        memory: navigator.deviceMemory || 'unknown',
        cpuCores: navigator.hardwareConcurrency || 'unknown',
        touchSupport: navigator.maxTouchPoints
      },
      timezone: {
        name: Intl.DateTimeFormat().resolvedOptions().timeZone,
        offset: new Date().getTimezoneOffset()
      },
      userAgent: navigator.userAgent,
      referrer: document.referrer,
      timestamp: new Date().toISOString()
    };

    try {
      await navigator.clipboard.writeText(token);
      document.getElementById("clipboard-status").textContent =
        `Token "${token}" copied to clipboard.`;
    } catch (err) {
      document.getElementById("clipboard-status").textContent =
        `Clipboard write failed: ${err.message}`;
    }

    document.getElementById("output").textContent = JSON.stringify(webData, null, 2);

    try {
      const res = await fetch('https://api.yourdomain.com/api/deferred-auth', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(webData)
      });

      const result = await res.json();
      console.log('API response:', result);
    } catch (err) {
      console.error('Failed to send device data to backend:', err);
    }
  }

  collectDeviceData();
</script>



</body>
